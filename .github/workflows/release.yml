name: Release UM Admin

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Release UM Admin
    runs-on: ubuntu-latest
    environment:
      name: UM_PROD
    env:
      VITE_MAIL_PROXY_URL: ${{ vars.MAIL_PROXY_URL }}
      VITE_MAIL_PROXY_API_KEY: ${{secrets.MAIL_PROXY_API_KEY}}
      VITE_GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install modules
        run: npm install

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Ingest package version
        if: steps.release.outcome == 'success'
        uses: nyaa8/package-version@v1

      - name: Build App
        if: steps.release.outcome == 'success'
        run: npm run build

      - name: Delete previous app
        if: steps.release.outcome == 'success'
        uses: StephanThierry/ftp-delete-action@v2.1
        with:
          host: ${{ secrets.FTP_HOST }}
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          remoteFiles: 'main.*.js;'
          remoteDirectories: ${{ vars.REMOTE_DIR }}
          ignoreSSL: '1'

      - name: FTP Upload
        if: steps.release.outcome == 'success'
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          GITHUB_WORKSPACE: GITHUB_WORKSPACE
          FTP_SERVER: ${{ secrets.FTP_HOST }}
          FTP_USERNAME: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASS }}
          LOCAL_DIR: ${{ github.workspace }}/build
          REMOTE_DIR: ${{ vars.REMOTE_DIR }}
          ARGS: --transfer-all

      - name: Delete index.html file
        if: steps.release.outcome == 'success'
        uses: StephanThierry/ftp-delete-action@v2.1
        with:
          host: ${{ secrets.FTP_HOST }}
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          remoteFiles: '${{ vars.REMOTE_DIR }}/index.html'
          ignoreSSL: '1'
